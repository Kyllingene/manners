var searchIndex = new Map(JSON.parse('[\
["reference",{"doc":"Crate-level documentation.","t":"PPPSTFGJFIONNNNNNQNNNNONNNCNHNNNNNNNNNNNOORTTKN","n":["A","B","C","CONSTANT","D","G","Q","STATIC","T","TypeAlias","asdf","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decl_macro","foo","from","from","from","ghjk","into","into","into","module","otherfun","root_fn","somefun","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","yetanother","d","e","B","C","DEF","F","foobar"],"q":[[0,"reference"],[40,"reference::Q"],[42,"reference::module"],[47,"core::result"],[48,"core::any"]],"d":["Q::A docs","Q::B docs","Q::C docs","","T::D docs","G docs","Q docs","","T docs","TypeAlias docs that get very very wide, in fact wider than â€¦","T.asdf docs","","","","","","","decl_macro docs","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","module docs","","root_fn docs","T::somefun docs","","","","","","","","","","","","","F::B docs","F::C docs","F::DEF docs","F docs","F::foobar docs"],"i":[5,5,5,0,6,0,0,0,0,0,6,6,5,7,6,5,7,0,7,6,5,7,6,6,5,7,0,6,0,6,6,5,7,6,5,7,6,5,7,6,8,8,9,9,9,0,9],"f":"```````````{ce{}{}}00000`{cc{}}000`111`{{}b}{{dd}b}{db}{c{{f{e}}}{}{}}00000{ch{}}004``````4","c":[0,1,2,3,4,5,6,7,8,9,10,17,18,22,26,27,28,29,39,40,41,42,43,44,45,46],"p":[[1,"unit"],[1,"u8"],[6,"Result",47],[5,"TypeId",48],[6,"Q",0],[5,"T",0],[5,"G",0],[15,"C",40],[10,"F",42]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
